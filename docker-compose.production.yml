networks:
  web:
    external: true
  django-taxi:
    external: false

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: taxi_basalt_website_production_django
    volumes:
      - production_django_media:/app/taxi_basalt_website/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start
    networks:
      - web
      - django-taxi
    labels:
      - "traefik.http.routers.django-taxi.rule=Host(`taxibasalt19.de`)"
      - traefik.http.routers.django-taxi.tls=true
      - traefik.http.routers.django-taxi.tls.certresolver=le-resolver
      - traefik.http.services.django-taxi.loadbalancer.server.port=5000
      - traefik.http.middlewares.csrf.headers.hostsproxyheaders='X-CSRFToken'
      - traefik.http.routers.django-taxi.middlewares=csrf
      - traefik.http.routers.django-taxi.entrypoints=websecure

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: taxi_basalt_website_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    networks:
      - django-taxi
    labels:
      - traefik.enable=false

  redis:
    image: docker.io/redis:6
    networks:
      - django-taxi
    labels:
      - traefik.enable=false

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: taxi_basalt_website_production_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
    networks:
      - django-taxi
      - web
    labels:
      - traefik.enable=true
      - traefik.http.services.nginx-taxi.loadbalancer.server.port=80
      - "traefik.http.routers.nginx-taxi.rule=Host(`taxibasalt19.de`) && PathPrefix(`/media/`)"
      - traefik.http.routers.nginx-taxi.tls=true
      - traefik.http.routers.nginx-taxi.tls.certresolver=le-resolver
      - traefik.http.routers.nginx-taxi.middlewares=csrf
      - traefik.http.routers.nginx-taxi.entrypoints=websecure
